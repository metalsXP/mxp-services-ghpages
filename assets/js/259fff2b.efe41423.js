"use strict";(self.webpackChunkubc_services=self.webpackChunkubc_services||[]).push([[8669],{27452:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/image_002-86f3bfa22f28c4acf016befd6127b3a0.png"},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var i=s(96540);const a={},t=i.createContext(a);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(t.Provider,{value:n},e.children)}},44965:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/image_003-979770bf5f2a537b20196236236f4666.png"},76650:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/image_004-bf9643fc248b1f0686bbd4bf82fc0ba7.png"},83009:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"usage","title":"Usage","description":"At its core, mdVC integrates into AVC through the enhancement spot vchhles_core.","source":"@site/docs/products/mdVC/usage.md","sourceDirName":".","slug":"/usage/","permalink":"/products/mdVC/usage/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"slug":"/usage/"},"sidebar":"mdVC","previous":{"title":"Setup","permalink":"/products/mdVC/setup/"},"next":{"title":"Connectors","permalink":"/products/mdVC/connectors/"}}');var a=s(74848),t=s(28453);const c={slug:"/usage/"},r="Usage",l={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Trigger and Timeline",id:"trigger-and-timeline",level:3},{value:"Framework",id:"framework",level:3},{value:"Task",id:"task",level:3},{value:"Simple Task",id:"simple-task",level:4},{value:"Value Get/Set",id:"value-getset",level:5},{value:"Influence UI",id:"influence-ui",level:5},{value:"Log",id:"log",level:5},{value:"Trace",id:"trace",level:5},{value:"Status",id:"status",level:5},{value:"Best Practice",id:"best-practice",level:6},{value:"Composite Task",id:"composite-task",level:4},{value:"Settler Task",id:"settler-task",level:4}];function _(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",header:"header",img:"img",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"usage",children:"Usage"})}),"\n",(0,a.jsxs)(n.p,{children:["At its core, ",(0,a.jsx)(n.strong,{children:"mdVC"})," integrates into AVC through the enhancement spot ",(0,a.jsx)(n.code,{children:"vch_hl_es_core"}),".",(0,a.jsx)(n.br,{}),"\n","This BADI provides several filter values:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"configuration_context"}),": Context of the calling variant configuration"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"cfg_object_type"}),": Name of the database table for the object"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"cfg_object_key"}),": Key of the configurable object"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"plant"}),": Plant"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["These filters help determine the correct implementation and whether ",(0,a.jsx)(n.strong,{children:"mdVC"})," should be activated for a specific use case."]}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["We generally recommend keeping your configuration model as lean as possible.",(0,a.jsx)(n.br,{}),"\n","Complex logic and dependencies should be encapsulated in ",(0,a.jsx)(n.strong,{children:"mdVC"})," instead."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"PMEVC example",src:s(27452).A+"",width:"489",height:"548"})}),"\n",(0,a.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsxs)(n.p,{children:["To integrate ",(0,a.jsx)(n.strong,{children:"mdVC"}),", create an implementation of the BADI ",(0,a.jsx)(n.code,{children:"vch_hl_es_core-vch_hl_post_validate_assign"})," and assign suitable filter values as required.",(0,a.jsx)(n.br,{}),"\n","Within your implementation class, the key method is ",(0,a.jsx)(n.code,{children:"if_vch_hl_post_validate_assign~assign_values"}),", which triggers your ",(0,a.jsx)(n.strong,{children:"mdVC"})," logic."]}),"\n",(0,a.jsx)(n.h3,{id:"trigger-and-timeline",children:"Trigger and Timeline"}),"\n",(0,a.jsxs)(n.p,{children:["The method ",(0,a.jsx)(n.code,{children:"if_vch_hl_post_validate_assign~assign_values"})," is executed by AVC ",(0,a.jsx)(n.em,{children:"after"})," the standard configuration model has been evaluated and validated.",(0,a.jsx)(n.br,{}),"\n","As mentioned earlier, this model should be kept minimal, shifting most logic into ",(0,a.jsx)(n.strong,{children:"mdVC"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"framework",children:"Framework"}),"\n",(0,a.jsxs)(n.p,{children:["The BADI implementation acts as the glue between AVC and ",(0,a.jsx)(n.strong,{children:"mdVC"}),", defining the control flow.",(0,a.jsx)(n.br,{}),"\n","Every ",(0,a.jsx)(n.strong,{children:"mdVC"})," invocation follows a consistent pattern:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:'/mxp/vcha_cl_va_engine=>factory(\n  i_badi_implementation = me\n  i_explosion_date = ref #( explosion_date )\n  i_hierarchy = ref #( hierarchy )\n  i_characteristics = ref #( characteristics )\n  i_values = ref #( values )\n  i_bill_of_materials = ref #( bill_of_materials )\n  i_assign_by_value = ref #( assign_by_value )\n  i_assign_by_key = ref #( assign_by_key )\n  i_unassign = ref #( unassign )\n)->process( new /mxp/vcha_cl_va_task_composite( value #( "task list, one after each other\n    ( new zcl_your_task( ) ) "task implementation(s) to be replaced\n) ) ).\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The class ",(0,a.jsx)(n.code,{children:"/mxp/vcha_cl_va_engine"})," serves as the main entry point for ",(0,a.jsx)(n.strong,{children:"mdVC"}),", encapsulating all related logic.",(0,a.jsx)(n.br,{}),"\n","It maintains access to the configuration and executes tasks \u2014 either ",(0,a.jsx)(n.a,{href:"#simple-task",children:"simple"})," or ",(0,a.jsx)(n.a,{href:"#composite-task",children:"composite"})," \u2014 that define thebehavior.",(0,a.jsx)(n.br,{}),"\n","In the example above, ",(0,a.jsx)(n.code,{children:"zcl_your_task"})," refers to a customer specifc class implementing a single task with custom logic."]}),"\n",(0,a.jsx)(n.h3,{id:"task",children:"Task"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.strong,{children:"mdVC"})," framework includes several predefined task types that help define the execution flow.",(0,a.jsx)(n.br,{}),"\n","These are intentionally kept free of business logic. For adding logic, use ",(0,a.jsx)(n.a,{href:"/products/mdVC/connectors/",children:"Connectors"})," or add a custom ",(0,a.jsx)(n.a,{href:"#simple-task",children:"Simple Task"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Below is an overview of the available task types, with key classes ",(0,a.jsx)("span",{class:"refTextToHighlightedMermaidClass",children:"highlighted"}),":"]}),"\n",(0,a.jsx)(n.mermaid,{value:"---\nconfig:\n    class:\n      hideEmptyMembersBox: true\n---\n%%{init: {'theme':'neutral'}}%%\nclassDiagram\n\nclass `/mxp/vcha_if_va_task` {\n  +execute(i_engine: ref to /mxp/vcha_if_va_engine, i_log: ref to /mxp/vcha_if_log, i_parent_task: ref to /mxp/vcha_if_va_task)\n}\n\nclass `/mxp/vcha_if_va_task_composite` {\n  +m_tasks: /mxp/vcha_if_va_task=>t_tasks\n  +add_task(i_task: ref to /mxp/vcha_if_va_task): ref to /mxp/vcha_if_va_task_composite\n  +remove_task(i_task: ref to /mxp/vcha_if_va_task): ref to /mxp/vcha_if_va_task_composite\n}\n\nclass `/mxp/vcha_cl_va_task` {\n  <<abstract>>\n}\n\nclass `/mxp/vcha_cl_va_task_composite`:::highlightedMermaidClass {\n  +constructor(i_tasks: /mxp/vcha_if_va_task=>t_tasks)\n  +/mxp/vcha_if_va_task~execute()\n}\n\nclass `/mxp/vcha_cl_va_task_settler`:::highlightedMermaidClass {\n  +constructor(i_tasks: /mxp/vcha_if_va_task=>t_tasks, i_max_attempts: i)\n  +/mxp/vcha_if_va_task~execute()\n  +c_max_attempts: constant\n}\n\nclass `/mxp/vcha_cl_va_task_simple`:::highlightedMermaidClass {\n  <<abstract>>\n}\n\n\n`/mxp/vcha_cl_va_task` ..|> `/mxp/vcha_if_va_task`\n`/mxp/vcha_cl_va_task` <|-- `/mxp/vcha_cl_va_task_simple`\n`/mxp/vcha_cl_va_task` <|-- `/mxp/vcha_cl_va_task_composite`\n`/mxp/vcha_cl_va_task_composite` ..|> `/mxp/vcha_if_va_task_composite`\n`/mxp/vcha_cl_va_task_composite` <|-- `/mxp/vcha_cl_va_task_settler`"}),"\n",(0,a.jsx)(n.h4,{id:"simple-task",children:"Simple Task"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"simple task"})," is ideal for adding custom logic in your own ",(0,a.jsx)(n.code,{children:"Z"})," classes.",(0,a.jsx)(n.br,{}),"\n","Each task serves a focused purpose\u2014like validation or value calculation \u2014 and extends from ",(0,a.jsx)(n.code,{children:"/mxp/vcha_cl_va_task_simple"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["You must redefine the method ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_va_task~execute"}),", which is invoked by the framework and provides access to the relevant context.",(0,a.jsx)(n.br,{}),"\n","Below is an example implementation:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:"class zcl_your_task definition public create public inheriting from /mxp/vcha_cl_va_task_simple.\n  public section.\n    methods /mxp/vcha_if_va_task~execute redefinition.\nendclass.\n\nclass zcl_your_task implementation.\n  method /mxp/vcha_if_va_task~execute.\n    \"get THICKNESS\n    data(l_thickness) = i_engine->m_container->get_characteristic_by_name( i_instance_id = i_engine->m_container->m_root_instance_id i_cstic_name = 'THICKNESS' ).\n    data(l_thickness_val) = i_engine->m_container->get_assigned_value_for_cstic( l_thickness->key ).\n\n    \"get THICKNESS2\n    data(l_thickness2) = i_engine->m_container->get_characteristic_by_name( i_instance_id = i_engine->m_container->m_root_instance_id i_cstic_name = 'THICKNESS2' ).\n    data(l_thickness2_val) = i_engine->m_container->get_assigned_value_for_cstic( l_thickness2->key ).\n\n    \"write max of THICKNESS or THICKNESS2 to THICKNESS_MAX\n    i_engine->m_container->assign_value(\n      value #( key             = i_engine->m_container->get_characteristic_by_name( i_instance_id = i_engine->m_container->m_root_instance_id i_cstic_name = 'THICKNESS_MAX' )->key\n               value_float     = cond #( when l_thickness_val->value_float_min > l_thickness2_val->value_float_min\n                                           then l_thickness_val->value_float_min\n                                           else l_thickness2_val->value_float_min ) ) ).\n  endmethod.\nendclass.\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Implementation hints"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["When working with characteristics, prefer accessing them by name using ",(0,a.jsx)(n.code,{children:"get_characteristic_by_name"}),".",(0,a.jsx)(n.br,{}),"\n","If the characteristic is not returned, it likely doesn\u2019t exist in the configuration model\u2014this usually points to a modeling issue."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["To exit task processing early (regardless of whether the task is standalone or part of a composite), you can raise the exception ",(0,a.jsx)(n.code,{children:"/mxp/vcha_cx_skip_proc"}),".",(0,a.jsx)(n.br,{}),"\n","This will skip the remaining execution logic without triggering an error. The exeception does have a parameter ",(0,a.jsx)(n.code,{children:"levels"})," which controls up to which number of composite tasks the task is wrapped into will be skipped (or ",(0,a.jsx)(n.code,{children:"c_all_levels"})," if no restriction)."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Composite Task 1","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Composite Task 2","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Single Task"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The exception is raised in Single Task with ",(0,a.jsx)(n.code,{children:"level = 1"}),", which means that the processing of ",(0,a.jsx)(n.code,{children:"Composite Task 2"})," is skipped, but not the further processing of ",(0,a.jsx)(n.code,{children:"Composite Task 1"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h5,{id:"value-getset",children:"Value Get/Set"}),"\n",(0,a.jsxs)(n.p,{children:["Access to characteristic values is provided by the interface ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_va_container"}),".",(0,a.jsx)(n.br,{}),"\n","This container manages the configuration context and all characteristic values\u2014assigned or not."]}),"\n",(0,a.jsxs)(n.p,{children:["To read or assign values, use ",(0,a.jsx)(n.code,{children:"i_engine->m_container"}),".",(0,a.jsx)(n.br,{}),"\n","For practical examples, see the example ",(0,a.jsx)(n.a,{href:"#simple-task",children:"above"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Different assignment types exist (e.g., user input vs. determination).",(0,a.jsx)(n.br,{}),"\n","Typically, user input takes precedence. If needed, check and manage the assignment type using ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_va_container=>c_assignment_types-user_input"}),"."]})}),"\n",(0,a.jsx)(n.h5,{id:"influence-ui",children:"Influence UI"}),"\n",(0,a.jsx)(n.p,{children:"In the AVC UI, characteristics can be controlled via:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Read-only"}),"\n",(0,a.jsx)(n.li,{children:"Hidden"}),"\n",(0,a.jsx)(n.li,{children:"Mandatory"}),"\n",(0,a.jsx)(n.li,{children:"Value exclusion"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["These can be managed using ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_va_session_bridge"}),", which connects ",(0,a.jsx)(n.strong,{children:"mdVC"})," to the AVC session."]}),"\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"i_engine->m_session"})," to access the session bridge.",(0,a.jsx)(n.br,{}),"\n","Below is an example showing how to hide a characteristic based on a condition:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:"class zcl_my_task definition public create public inheriting from /mxp/vcha_cl_va_task_simple.\n  public section.\n    methods /mxp/vcha_if_va_task~execute redefinition.\n  protected section.\n  private section.\nendclass.\n\nclass zcl_my_task implementation.\n  method /mxp/vcha_if_va_task~execute.\n    \"get product type value\n    data(l_product_type) = i_engine->m_container->get_assigned_value_for_cstic(\n      i_engine->m_container->get_characteristic_by_name( i_instance_id = i_engine->m_container->m_root_instance_id i_cstic_name = 'PRODUCT_TYPE' )->key ).\n\n    \"determine whether to hide attribute and hide it or not\n    i_engine->m_session->set_cstic_hidden(\n      i_key       = i_engine->m_container->get_characteristic_by_name( i_instance_id = i_engine->m_container->m_root_instance_id i_cstic_name = 'LENGTH' )->key\n      i_is_hidden = cond #( when l_product_type->value_string = 'COIL' then if_vch_hl_post_validate_assign=>gc_boolean-true ) ).\n  endmethod.\nendclass.\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["This example focuses solely on hiding a characteristic.",(0,a.jsx)(n.br,{}),"\n","If values are already assigned, unassignment may be necessary as well."]})}),"\n",(0,a.jsx)(n.h5,{id:"log",children:"Log"}),"\n",(0,a.jsxs)(n.p,{children:["To write custom messages into the AVC log, use the interface ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_log"}),".",(0,a.jsx)(n.br,{}),"\n","Access the log via ",(0,a.jsx)(n.code,{children:"i_engine->m_session->m_log"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Here\u2019s an example that logs a custom error message:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:"class zcl_my_task definition public create public inheriting from /mxp/vcha_cl_va_task_simple.\n  public section.\n    methods /mxp/vcha_if_va_task~execute redefinition.\n  protected section.\n  private section.\nendclass.\n\nclass zcl_my_task implementation.\n  method /mxp/vcha_if_va_task~execute.\n    message e899(v1) with 'test message' into data(l_message_text).\n    i_engine->m_session->m_log->add_sy_message( ).\n  endmethod.\nendclass.\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Adding an error message does not automatically change the configuration status.",(0,a.jsx)(n.br,{}),"\n","Refer to the ",(0,a.jsx)(n.a,{href:"#best-practice",children:"Status Best Practice"})," section to see how to manage status explicitly based on messages."]})}),"\n",(0,a.jsxs)(n.p,{children:["The log messages appear in the standard AVC message popover:",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.img,{alt:"Message Popover",src:s(44965).A+"",width:"456",height:"495"})]}),"\n",(0,a.jsx)(n.h5,{id:"trace",children:"Trace"}),"\n",(0,a.jsxs)(n.p,{children:["Use the interface ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_trace"})," to write additional context or technical information into the AVC trace\u2014helpful for debugging or advanced analysis.",(0,a.jsx)(n.br,{}),"\n","Access it through ",(0,a.jsx)(n.code,{children:"i_engine->m_session->m_trace"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:"class zcl_my_task definition create public inheriting from /mxp/vcha_cl_va_task_simple.\n  public section.\n    methods /mxp/vcha_if_va_task~execute redefinition.\n  protected section.\n  private section.\nendclass.\n\nclass zcl_my_task implementation.\n  method /mxp/vcha_if_va_task~execute.\n    message e899(v1) with 'test trace message' into data(l_message_text).\n    i_engine->m_session->m_trace->add_sy_message( ).\n  endmethod.\nendclass.\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{alt:"trace in AVC",src:s(76650).A+"",width:"1838",height:"761"}),'\n(on the right side you can see the "test trace message")']}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"If your logic is complex and performance is a concern, check if the trace is active using /mxp/vcha_if_trace->is_active( ) before writing to it."})}),"\n",(0,a.jsx)(n.h5,{id:"status",children:"Status"}),"\n",(0,a.jsxs)(n.p,{children:["The configuration status can be influenced programmatically using ",(0,a.jsx)(n.code,{children:"/mxp/vcha_if_status"}),", accessible via ",(0,a.jsx)(n.code,{children:"i_engine->m_session->m_status"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Here\u2019s an example of how to set the configuration status:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:"class zcl_my_task definition create public inheriting from /mxp/vcha_cl_va_task_simple.\n  public section.\n    methods /mxp/vcha_if_va_task~execute redefinition.\n  protected section.\n  private section.\nendclass.\n\nclass zcl_my_task implementation.\n  method /mxp/vcha_if_va_task~execute.\n    data(l_thickness) = i_engine->m_container->get_assigned_value_for_cstic( i_engine->m_container->get_characteristic_by_name( i_instance_id = i_engine->m_container->m_root_instance_id i_cstic_name = 'THICKNESS' )->key ).\n\n    if l_thickness is not bound or l_thickness->value_float_min <= 0.\n      i_engine->m_session->m_status->set_locked( ).\n    else.\n      i_engine->m_session->m_status->set_released( ).\n    endif.\n  endmethod.\nendclass.\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-info",children:"It is only allowed by aVC standard to programatically change to status `Locked` or `Released`.\n"})}),"\n",(0,a.jsx)(n.h6,{id:"best-practice",children:"Best Practice"}),"\n",(0,a.jsxs)(n.p,{children:["Users typically expect an error message if the configuration is incomplete.",(0,a.jsx)(n.br,{}),"\n","Our recommended approach is to use a ",(0,a.jsx)(n.a,{href:"#composite-task",children:"Composite Task"})," at the top level.",(0,a.jsx)(n.br,{}),"\n","Handle message generation in a simple task, and then finalize with ",(0,a.jsx)(n.code,{children:"/mxp/vcha_cl_va_log_to_status"}),", which derives the status based on the presence of error messages.\nIf there is an error, the status will be set to ",(0,a.jsx)(n.code,{children:"Locked"})," and if not, the status will be set to ",(0,a.jsx)(n.code,{children:"Released"}),".\nExample:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:'/mxp/vcha_cl_va_engine=>factory(\n  i_badi_implementation = me\n  i_explosion_date = ref #( explosion_date )\n  i_hierarchy = ref #( hierarchy )\n  i_characteristics = ref #( characteristics )\n  i_values = ref #( values )\n  i_bill_of_materials = ref #( bill_of_materials )\n  i_assign_by_value = ref #( assign_by_value )\n  i_assign_by_key = ref #( assign_by_key )\n  i_unassign = ref #( unassign )\n)->process( new /mxp/vcha_cl_va_task_composite( value #( "task list, one after each other\n    ( new zcl_your_task( ) ) "task implementation(s) to be replaced\n    ( new /mxp/vcha_cl_va_log_to_status( ) ) "evaluates error messages and sets status\n) ) ).\n'})}),"\n",(0,a.jsx)(n.h4,{id:"composite-task",children:"Composite Task"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"composite task"})," sequences multiple tasks\u2014either simple or other composite tasks\u2014executed one after another.",(0,a.jsx)(n.br,{}),"\n","It allows complex behavior to be modularized and reused."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:'/mxp/vcha_cl_va_engine=>factory(\n  i_badi_implementation = me\n  i_explosion_date = ref #( explosion_date )\n  i_hierarchy = ref #( hierarchy )\n  i_characteristics = ref #( characteristics )\n  i_values = ref #( values )\n  i_bill_of_materials = ref #( bill_of_materials )\n  i_assign_by_value = ref #( assign_by_value )\n  i_assign_by_key = ref #( assign_by_key )\n  i_unassign = ref #( unassign )\n)->process( new /mxp/vcha_cl_va_task_composite( value #( "task list, one after each other\n    ( new zcl_initialize_some_things( ) ) "task implementation(s) to be replaced\n    ( new /mxp/vcha_cl_va_task_composite( value #(\n        ( new zcl_do_something( ) )\n        ( new zcl_do_something2( ) )\n      ) ) )\n    ( new /mxp/vcha_cl_va_log_to_status( ) ) "evaluates error messages and sets status\n) ) ).\n'})}),"\n",(0,a.jsx)(n.p,{children:"While the above nesting may appear redundant, this pattern allows for flexibility\u2014such as looping or conditional logic\u2014especially useful in more advanced scenarios."}),"\n",(0,a.jsx)(n.h4,{id:"settler-task",children:"Settler Task"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"settler task"})," extends the composite task and repeats its execution until stability is reached\u2014i.e., no further value changes occur.",(0,a.jsx)(n.br,{}),"\n","This is useful when characteristics have mutual dependencies."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-abap",children:'/mxp/vcha_cl_va_engine=>factory(\n  i_badi_implementation = me\n  i_explosion_date = ref #( explosion_date )\n  i_hierarchy = ref #( hierarchy )\n  i_characteristics = ref #( characteristics )\n  i_values = ref #( values )\n  i_bill_of_materials = ref #( bill_of_materials )\n  i_assign_by_value = ref #( assign_by_value )\n  i_assign_by_key = ref #( assign_by_key )\n  i_unassign = ref #( unassign )\n)->process( new /mxp/vcha_cl_va_task_composite( value #( "task list, one after each other\n    ( new zcl_initialize_some_things( ) ) "task implementation(s) to be replaced\n    ( new /mxp/vcha_cl_va_task_settler( value #( "repeat until values reaches stability\n        ( new zcl_calc_b_based_on_a( ) )\n        ( new zcl_calc_a_based_on_b( ) )\n      ) ) )\n    ( new /mxp/vcha_cl_va_log_to_status( ) ) "evaluates error messages and sets status\n) ) ).\n'})}),"\n",(0,a.jsxs)(n.p,{children:["When using ",(0,a.jsx)(n.a,{href:"/products/mdVC/connectors/cds/",children:"CDS views"})," to define characteristic dependencies, a settler task is often required to iterate until all interdependencies are resolved."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(_,{...e})}):_(e)}}}]);