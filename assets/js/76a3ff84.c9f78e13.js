"use strict";(self.webpackChunkubc_services=self.webpackChunkubc_services||[]).push([[440],{4079:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_005-8f20afb8d29268dcd8faebd0808c3fd4.png"},6301:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_007-ada80e03b19d62a2d02ae58ca79af1c1.png"},9983:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"GDE/documentation","title":"Data Element Generation (GDE)","description":"Intro","source":"@site/docs/products/QPPD/GRO/GDE/documentation.md","sourceDirName":"GDE","slug":"/GDE/documentation","permalink":"/products/QPPD/GRO/GDE/documentation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"qppdGRO","previous":{"title":"CDS View Generation (GDD)","permalink":"/products/QPPD/GRO/GDD/documentation"}}');var s=t(74848),a=t(28453);const o={},r="Data Element Generation (GDE)",l={},d=[{value:"Intro",id:"intro",level:2},{value:"Technical Overview",id:"technical-overview",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Usage",id:"usage",level:2}];function c(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"data-element-generation-gde",children:"Data Element Generation (GDE)"})}),"\n",(0,s.jsx)(n.h2,{id:"intro",children:"Intro"}),"\n",(0,s.jsx)(n.p,{children:"Using the automatic Data Element Generation based on QPPD elements can save a lot of manual work by developers working with QPPD.\nOften, QPPD elements are maintained by different departments within your company. Not very often the QPPD elements are maintained by developers which usally has requirements for classic Data Elements to proceed with their work regarding technical interfaces, apps, queries, ....\nIn this case a developer first needs to translate the QPPD element customizing to a DDIC data element. Each time the QPPD element got updated, the developer needs to adapt the Data Elements."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"This is a time consuming task which is prone to errors. Let the developer focus on the important/business logic things!"})}),"\n",(0,s.jsx)(n.p,{children:"Our solution is to have a Workbench generating Data Elements/Domains which then can be easily used anywhere in your SAP system. The Data Elements are generated automatically and visualized in a user-friendly workbench where all differences and errors can be resolved."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"The Data Element Generation is only the first step in our journey simplifying and reducing efforts and can be seen as a precondition to open doors for your Business Layer/Interfaces/Interface Views(CDS)."})}),"\n",(0,s.jsx)(n.h2,{id:"technical-overview",children:"Technical Overview"}),"\n",(0,s.jsxs)(n.p,{children:["Data Elements for QPPD elements gets administrated in our very own Workbench called ",(0,s.jsx)(n.code,{children:"/MXP/QP_GDE"})," (transaction). As this is an UI5 App you can also start GDE using the following information: ",(0,s.jsx)(n.img,{alt:"Target Mapping GDE",src:t(85172).A+"",width:"1301",height:"379"})]}),"\n",(0,s.jsxs)(n.p,{children:["Each Data Elements gets its own Domain (where it makes sense, e.g. not for ",(0,s.jsx)(n.code,{children:"BOOL"})," which is simply ",(0,s.jsx)(n.code,{children:"BOOLE"}),").\nA Data Element gets linked to a QPPD element by automatically adding it as a attribute for the QPPD element customizing (which can be called with transaction ",(0,s.jsx)(n.code,{children:"/SCT/QP_C21"}),").",(0,s.jsx)(n.br,{}),"\n","Please note, that you cannot see the Data Element linked to a QPPD element directly in ",(0,s.jsx)(n.code,{children:"/SCT/QP_C21"})," as the field is an extension (",(0,s.jsx)(n.code,{children:"/SCT/QP_TELEM-/MXP/QP_DTELNAME"}),"):",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.img,{alt:"Element Extension Customizing",src:t(31083).A+"",width:"962",height:"309"}),"\n",(0,s.jsx)(n.img,{alt:"Data Element",src:t(77584).A+"",width:"960",height:"463"})]}),"\n",(0,s.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(n.p,{children:["Whilst it is technically possible to override Element definitions like the conversion method in QPPD custimzing ",(0,s.jsx)(n.code,{children:"/SCT/QP_C20"}),", it is highly discouraged. Consider creating new elements if it is technically different.",(0,s.jsx)(n.br,{}),"\n","Currently we only support Data Element Generation for QPPD elements and not element assignments to element groups. Thus, overriden conversion methods have no effect."]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open transaction ",(0,s.jsx)(n.code,{children:"/MXP/QP_GDE"})," or the App directly from the Fiori Launchpad\n",(0,s.jsx)(n.img,{alt:"Selection Screen",src:t(74489).A+"",width:"1776",height:"644"}),"\nOn the first screen you will find an overview of all QPPD Elements and can see to which one already a Data Element is linked. You can also see information about last generation, if any."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Go to the details of one Element",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.img,{alt:"Details Element before Generation",src:t(59033).A+"",width:"1811",height:"830"}),(0,s.jsx)(n.br,{}),"\n","You will find information about:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The assigned Data Element, if yet one"}),"\n",(0,s.jsx)(n.li,{children:"Regeneration needed -> anything changed in the Element Customizing which results in different Data Element/Domain Attributes? (e.g., Conversion Method changed, Element added)"}),"\n",(0,s.jsx)(n.li,{children:"Admin Data for the Data Element Generation"}),"\n",(0,s.jsxs)(n.li,{children:['If there are any "Errors"\nAn Error itself identifies that something needs to be done with the Element before a Generation can take place. Every Error needs to be resolved before a Regeneration can be started.\nPossible Errors are:',"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Names too long => Data Element Name needs to be adapted to fulfill technical restrictions"}),"\n",(0,s.jsx)(n.li,{children:"Element without Conversion Method"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"You can find the same information in Result List on the first page."})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Start the generation, either by:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Single Generation, if we expect any Error or want to distinguish"}),'\nGo to the details page and click on \u201eEdit\u201c -> a new "Draft" will be opened. You will work on this Draft, complete it, and once you Save it the (Re) Generation will be done. As stated above, every Error needs to be resolved first if there is one.',(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.img,{alt:"Generation Configuration",src:t(4079).A+"",width:"1239",height:"701"}),(0,s.jsx)(n.br,{}),"\n","As we will generate Artifacts and link to Customizing Tables, you are forced to specify Information in section ",(0,s.jsx)(n.strong,{children:"Configuration"})," like:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Elements Section","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["DDIC Prefix\nEvery new Data Element gets prefixed, the following pattern applies ",(0,s.jsx)(n.code,{children:"<<ddic_prefix>>_<<element_name>>"})]}),"\n",(0,s.jsx)(n.li,{children:"Package\nEvery new Data Element needs to be assigned to a Development Package in the system. Normally starting with Z or Y."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Transports Section","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Workbench Request\nAs we generate Artifacts which needs to be transported, this is simply for specifying a Transport Request the changes will be recorded."}),"\n",(0,s.jsxs)(n.li,{children:["Customizing Request",(0,s.jsx)(n.br,{}),"\n","to save the link between QPPD Specification type and Root CDS View."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi Generation"}),'\nSimply select one to many Elements from the Overview List and click on "(Re) generate:',(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.img,{alt:"Select Elements and Regenerate",src:t(6301).A+"",width:"1593",height:"310"}),(0,s.jsx)(n.br,{}),"\n","The same Configuration for Generation has to be done as before. Valid for all selected lines.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.img,{alt:"Configuration Generation Multi",src:t(49853).A+"",width:"971",height:"377"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:'Please note that for every Data Element which will have an Error like "No Conversion Method assigned" the Generation cannot take place. An Error message will be shown. It has to be processed in Single Generation mode (see above).'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The Generation results will be shown in a Message Popup. Open SAPGUI/Eclipse ADT for any details of the Data Element.\n",(0,s.jsx)(n.img,{alt:"Messages after Generation",src:t(27443).A+"",width:"1385",height:"512"}),"\nThe link to you newly generated Data Elements gets persisted in QPPD customizing table and will be transported using the Transport Requests stated before."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:['For troubleshooting purposes you will find a Button "Unlink", which essentially unlinks the Data Element from the Element in Customizing ',(0,s.jsx)(n.code,{children:"/SCT/QP_C21"}),". Please make sure the Data Element is not used in any other Objects, as the Deletion cannot succeed then.\n",(0,s.jsx)(n.img,{alt:"Unlink Element",src:t(85485).A+"",width:"1076",height:"575"})]})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},27443:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_009-a0e7a243dee12c7965772aa83bf8325c.png"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(96540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},31083:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_001-a54e8b29fee97d8ed99d33b5180a6a36.png"},49853:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_008-b391d5c419d0e42e4088365ebe7a2f0e.png"},59033:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_004-a42b6899a39b040247535ded5265ebe3.png"},74489:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_003-de1b4a0531f3a760e821cb904906331f.png"},77584:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_002-9c04ce1b8391db6b451527fcaca67bdd.png"},85172:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_006-efdc4e8c2d2960810c7daab3dc3fd720.png"},85485:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/figure_010-3c244828de6f26a48d60ab1cf0c23e13.png"}}]);